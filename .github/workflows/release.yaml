name: BuildReleasePublish

on:
  push:
    tags:
      - '*'

jobs:
  build-release-publish:
    name: Build release publish
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.9
      POETRY_VERSION: 1.1.15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1 # change to appropriate region
          role-to-assume: arn:aws:iam::212028562834:role/data-collection-publish-to-repo-role
          role-session-name: RepoPublishPackage
          role-duration-seconds: 900

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Poetry ${{ env.POETRY_VERSION }}
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Check poetry
        run: |
          poetry --version
          poetry --help

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Build and publish
        run: |
          export POETRY_HTTP_BASIC_PULSAR_DATA_COLLECTION_REPOSITORY_USERNAME=aws
          export POETRY_HTTP_BASIC_PULSAR_DATA_COLLECTION_REPOSITORY_PASSWORD=$(aws codeartifact get-authorization-token \
              --domain pulsar-model-performance-management --query authorizationToken --output text --region us-east-1)

          poetry build
          poetry publish --repository pulsar_data_collection_repository